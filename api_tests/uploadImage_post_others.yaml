# Test generated by RoostGPT for test test25OctPostmanCheck using AI Type Open AI and AI Model gpt-4

# RoostTestHash=fd50cf6635

config:
  target: "{{ $processEnvironment.API_HOST }}"
  processor: ""
  plugins:
    expect: {}
  payload:
    path: "uploadImage_post_others.csv"
    fields:
      - "petId"
      - "additionalMetadata"
      - "file"
    skipHeader: true
  environments:
    variable:
      target: "{{ $processEnvironment.API_HOST }}"
scenarios:
  - name: 'API uploadImage test scenario'
    flow:
      - think: 5
      - post:
          url: "/pet/{{ petId }}/uploadImage"
          beforeRequest: ""
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          capture:
            - json: "$"
              as: "responseBody"
          expect:
            - statusCode: 400
            - hasProperty: "message"
          log: "Testing with valid petId but missing file"
      - think: 5
      - post:
          url: "/pet/{{ petId }}/uploadImage"
          beforeRequest: ""
          headers:
            Authorization: "InvalidToken"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          capture:
            - json: "$"
              as: "responseBody"
          expect:
            - statusCode: 401
            - hasProperty: "message"
          log: "Testing with invalid Authorization token"
      - think: 5
      - post:
          url: "/pet/9999999999999/uploadImage"
          beforeRequest: ""
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          capture:
            - json: "$"
              as: "responseBody"
          expect:
            - statusCode: 404
            - hasProperty: "message"
          log: "Testing with non-existent petId"
      - think: 5
      - post:
          url: "/pet/{{ petId }}/uploadImageInvalidURL"
          beforeRequest: ""
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          formData:
            additionalMetadata: "{{ additionalMetadata }}"
            file: "{{ file }}"
          capture:
            - json: "$"
              as: "responseBody"
          expect:
            - statusCode: 404
            - hasProperty: "message"
          log: "Testing with invalid URL"
