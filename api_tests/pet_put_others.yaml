# Test generated by RoostGPT for test test25OctPostmanCheck using AI Type Open AI and AI Model gpt-4

# RoostTestHash=aaef3850a1

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  plugins:
    expect: {}
  payload:
    path: "pet_put_others.csv"
    fields: 
      - "field1"
      - "field2"
    skipHeader: true
  environments:
    production:
      target: "{{ $processEnvironment.API_HOST }}"
scenarios:
  - name: "Update an existing pet - failure scenarios"
    flow:
      - log: "Send invalid request - No payload"
        post:
          url: "/pet"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 5
      - log: "Send invalid request - Invalid ID"
        post:
          url: "/pet"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "invalidID"
            field1: "{{ field1 }}"
            field2: "{{ field2 }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 5
      - log: "Send invalid request - Pet not found"
        post:
          url: "/pet"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "nonExistentPetID"
            field1: "{{ field1 }}"
            field2: "{{ field2 }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 5
      - log: "Send invalid request - Validation exception"
        post:
          url: "/pet"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "validPetID"
            field1: "{{ field1 }}"
            field2: "invalidFieldValue"
          expect:
            - statusCode: 405
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 5
      - log: "Send invalid request - Unauthorized access"
        post:
          url: "/pet"
          headers:
            Authorization: "InvalidAuthToken"
            Content-Type: "application/json"
          json:
            id: "validPetID"
            field1: "{{ field1 }}"
            field2: "{{ field2 }}"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - hasHeader: "content-type"
        think: 5
      - log: "Send invalid request - Invalid URL"
        post:
          url: "/invalidURL"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            id: "validPetID"
            field1: "{{ field1 }}"
            field2: "{{ field2 }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
            - hasHeader: "content-type"
